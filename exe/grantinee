#!/usr/bin/env ruby

require 'bundler/setup'
require 'optparse'
require 'grantinee'

Grantinee.detect_active_record_connection!

# Parse command line arguments
parser = OptionParser.new do |opts|
  opts.banner = "Usage: grantinee [options]"

  # Help
  opts.on('-h', '--help', "Displays help") do
    puts opts
    exit
  end

  # Verbose mode
  opts.on('-v', '--verbose', "Run verbosely") do |n|
    Grantinee.configuration.verbose = true
  end

  # Database configuration file
  opts.on('-cFILE', '--config=FILE', "Database configuration file path") do |file_path|
    require 'yaml'
    config_yaml = YAML.load(File.read(file_path))

    Grantinee.configure do |c|
      config_yaml.each do |key, value|
        if Grantinee::Configuration::SUPPORTED_ARGUMENTS.include?(key.to_s)
          c.send(:"#{key}=", value)
        else
          puts "Warning: Unsupported configuration argument '#{key}'"
        end
      end
    end
  end
end
parser.parse!


file_name = if (file_name_index = ARGV.index('-f'))
              ARGV[file_name_index + 1]
            else
              "Grantinee"
            end

# Read the DSL commands and prepare the engine
parser = Grantinee::Dsl.eval(File.read(file_name))
engine = Grantinee::Engine.for Grantinee.configuration.engine

# Revoke permissions
parser.permissions.each { |data| engine.revoke_permissions!(data) }

# Grant permissions
parser.permissions.each { |data| engine.grant_permission!(data) }
